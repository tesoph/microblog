 <!-- <hr>
        {% with messages = get_flashed_messages() %}
        {% if messages %}
        <ul>
            {% for message in messages %}
            <li>{{ message }}</li>
            {% endfor %}
        </ul>
        {% endif %}
        {% endwith %}-->

        <!--  {% for post in posts %}
    <div><p>{{ post.author.username }} says: <b>{{ post.body }}</b></p></div>
    {% endfor %}-->

        <!--{% if current_user.is_anonymous %}-->


@app.route('/login', methods=['GET', 'POST'])
def login():
    '''
    if current_user.is_authenticated:
        return redirect(url_for('index'))
    form = LoginForm()
    if form.validate_on_submit():
        user = User.query.filter_by(username=form.username.data).first()
        if user is None or not user.check_password(form.password.data):
            flash('Invalid username or password')
            return redirect(url_for('login'))
        login_user(user, remember=form.remember_me.data)
        return redirect(url_for('index'))
    return render_template('login.html', title='Sign In', form=form)
    '''
    '''
    form = LoginForm()
    '''
    """Log user in"""

    # Forget any user_id
    session.clear()

    # User reached route via POST (as by submitting a form via POST)
    if request.method == "POST":
        '''
        # Ensure username was submitted
        if not request.form.get("username"):
            #return apology("must provide username", 403)

        # Ensure password was submitted
        elif not request.form.get("password"):
            #return apology("must provide password", 403)
          '''
        # Query database for username
        #userinfo=request.form.to_dict()
        userinfo =request.form.to_dict()
        print(f'user info: {userinfo}')
        user = db.users.find_one({"username": userinfo['username']})

        # Ensure username exists and password is correct
        '''
        if not check_password_hash(user["password"], request.form.get("password")):
            #return apology("invalid username and/or password", 403)
'''
        # Remember which user has logged in
        #session["user_id"] = rows[0]["id"]
        session['user_id'] = user['_id']
        # Redirect user to home page
        return redirect("/")

    # User reached route via GET (as by clicking a link or via redirect)
    else:
        return render_template("login.html", title='Log In')
    #return render_template('login.html', title='Sign In', form=form)